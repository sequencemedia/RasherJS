'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.subscribe=undefined;var _bom=require('../../bom/bom');var _rasher=require('../rasher');var _delegateManager=require('../delegate-manager');var delegateManager=new _delegateManager.DelegateManager();var delegateWithPhase=function delegateWithPhase(type,element,selector,handler,context){var phase=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var subscription={delegate:delegateManager.create(type,element,selector,handler,context),phase:type==='focus'||type==='blur'?true:!!phase};delegateManager.attach(type,element,subscription);return{stop:function stop(){delegateManager.detach(type,element,subscription);}};};var delegate=function delegate(type,element,selector,handler,context){var _subscription=void 0;switch(type){case'change':_subscription={type:type,delegate:delegateManager.create(type,element,selector,handler,context),supplementary:[{type:'beforeactivate',delegate:function delegate(){// can use 'attachEvent()' and 'detachEvent()' on DOM
var nodeName=void 0;var targetNode=void 0;if((nodeName=(targetNode=event.srcElement).nodeName.toLowerCase())==='select'){// eslint-disable-line
targetNode.attachEvent('onchange',_subscription.delegate);}else if(nodeName==='input'){var nodeType=targetNode.type;if(nodeType==='text'||nodeType==='password'){_subscription.value=targetNode.value;}else if(nodeType==='radio'||nodeType==='checkbox'){_subscription.checked=targetNode.checked;targetNode.attachEvent('onclick',_subscription.onclick=function(){if(targetNode.checked!==_subscription.checked){_subscription.checked=targetNode.checked;// remember state of control for additional clicks (deactivate will remove the handler)
targetNode.fireEvent('onchange',document.createEventObject());}});}targetNode.attachEvent('onchange',_subscription.delegate);}}},{type:'beforedeactivate',delegate:function delegate(){// can use 'attachEvent()' and 'detachEvent()' on DOM
var nodeName=void 0;var targetNode=void 0;if((nodeName=(targetNode=event.srcElement).nodeName.toLowerCase())==='select'){// eslint-disable-line
targetNode.detachEvent('onchange',_subscription.delegate);}else if(nodeName==='input'){var nodeType=targetNode.type;if(nodeType==='text'||nodeType==='password'){if(_subscription.value!==targetNode.value){// no need to remember state of control (it's deactivating)
targetNode.fireEvent('onchange',document.createEventObject());}}else if(nodeType==='radio'||nodeType==='checkbox'){targetNode.detachEvent('onclick',_subscription.onclick);delete _subscription.onclick;}targetNode.detachEvent('onchange',_subscription.delegate);}}}]};break;case'focus':_subscription={type:type,delegate:function(delegate){return function(){event.srcElement.detachEvent('onfocus',_subscription.delegate);// eslint-disable-line
return delegate.call();};}(delegateManager.create(type,element,selector,handler,context)),supplementary:[{type:'focusin',delegate:function delegate(){// can use 'attachEvent()' and 'detachEvent()' on DOM
event.srcElement.attachEvent('onfocus',_subscription.delegate);// eslint-disable-line
}}]};break;case'blur':_subscription={type:type,delegate:function(delegate){return function(){event.srcElement.detachEvent('onblur',_subscription.delegate);// eslint-disable-line
return delegate.call();};}(delegateManager.create(type,element,selector,handler,context)),supplementary:[{type:'focusout',delegate:function delegate(){// can use 'attachEvent()' and 'detachEvent()' on DOM
event.srcElement.attachEvent('onblur',_subscription.delegate);// eslint-disable-line
}}]};break;default:_subscription={type:type,delegate:delegateManager.create(type,element,selector,handler,context)};}delegateManager.attach(type,element,_subscription);return{subscription:function subscription(){return _subscription;},stop:function stop(){delegateManager.detach(type,element,_subscription);}};};var subscribe=exports.subscribe=_bom.FACADE===3?delegateWithPhase:_bom.FACADE===8?delegate:_rasher.notSupported;