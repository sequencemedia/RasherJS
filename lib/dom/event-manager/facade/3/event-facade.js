'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.TouchEventFacade=exports.KeyboardEventFacade=exports.MouseEventFacade=exports.FocusEventFacade=exports.ChangeEventFacade=undefined;var _getPrototypeOf=require('babel-runtime/core-js/object/get-prototype-of');var _getPrototypeOf2=_interopRequireDefault(_getPrototypeOf);var _possibleConstructorReturn2=require('babel-runtime/helpers/possibleConstructorReturn');var _possibleConstructorReturn3=_interopRequireDefault(_possibleConstructorReturn2);var _inherits2=require('babel-runtime/helpers/inherits');var _inherits3=_interopRequireDefault(_inherits2);var _classCallCheck2=require('babel-runtime/helpers/classCallCheck');var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=require('babel-runtime/helpers/createClass');var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var keyMap={25:9,// SHIFT-TAB
63232:38,// u
63233:40,// d
63234:37,// l
63235:39,// r
63272:46,// DEL
63273:36,// home
63275:35,// END
63276:33,// page u
63277:34// page d
};function initialize(event,currentTarget){this.target=event.target||event.srcElement;this.originalEvent=event;this.currentTarget=currentTarget||null;this.relatedTarget=event.relatedTarget||null;}function ingestEvent(facadeMap,event,eventFacade){var key=void 0;for(key in facadeMap){if(key in event){var KEY=facadeMap[key];eventFacade[KEY]=event[key];}}}var EventFacade=function(){function EventFacade(){(0,_classCallCheck3.default)(this,EventFacade);}(0,_createClass3.default)(EventFacade,[{key:'stopPropagation',value:function stopPropagation(){this.originalEvent.stopPropagation();}},{key:'preventDefault',value:function preventDefault(){this.originalEvent.preventDefault();}},{key:'stop',value:function stop(){var originalEvent=this.originalEvent;originalEvent.stopPropagation();originalEvent.preventDefault();}}]);return EventFacade;}();var ChangeEventFacade=exports.ChangeEventFacade=function(_EventFacade){(0,_inherits3.default)(ChangeEventFacade,_EventFacade);function ChangeEventFacade(event,currentTarget){var _this;(0,_classCallCheck3.default)(this,ChangeEventFacade);initialize.call((_this=(0,_possibleConstructorReturn3.default)(this,(ChangeEventFacade.__proto__||(0,_getPrototypeOf2.default)(ChangeEventFacade)).call(this)),_this),event,currentTarget);return _this;}return ChangeEventFacade;}(EventFacade);var FocusEventFacade=exports.FocusEventFacade=function(_EventFacade2){(0,_inherits3.default)(FocusEventFacade,_EventFacade2);function FocusEventFacade(event,currentTarget){var _this2;(0,_classCallCheck3.default)(this,FocusEventFacade);initialize.call((_this2=(0,_possibleConstructorReturn3.default)(this,(FocusEventFacade.__proto__||(0,_getPrototypeOf2.default)(FocusEventFacade)).call(this)),_this2),event,currentTarget);return _this2;}return FocusEventFacade;}(EventFacade);var MouseEventFacade=exports.MouseEventFacade=function(_EventFacade3){(0,_inherits3.default)(MouseEventFacade,_EventFacade3);function MouseEventFacade(event,currentTarget){var _this3;(0,_classCallCheck3.default)(this,MouseEventFacade);initialize.call((_this3=(0,_possibleConstructorReturn3.default)(this,(MouseEventFacade.__proto__||(0,_getPrototypeOf2.default)(MouseEventFacade)).call(this)),_this3),event,currentTarget);var key=void 0;if(typeof((key=event.keyCode||event.charCode)in keyMap?keyMap[key]:key)==='number'){_this3.key=key;}ingestEvent(MouseEventFacade.map,event,_this3);return _this3;}return MouseEventFacade;}(EventFacade);MouseEventFacade.map={ctrlKey:'ctrl',altKey:'alt',metaKey:'meta',shiftKey:'shift',altGraphKey:'altGraph',clientX:'clientX',clientY:'clientY',pageX:'pageX',pageY:'pageY'};var KeyboardEventFacade=exports.KeyboardEventFacade=function(_EventFacade4){(0,_inherits3.default)(KeyboardEventFacade,_EventFacade4);function KeyboardEventFacade(event,currentTarget){var _this4;(0,_classCallCheck3.default)(this,KeyboardEventFacade);initialize.call((_this4=(0,_possibleConstructorReturn3.default)(this,(KeyboardEventFacade.__proto__||(0,_getPrototypeOf2.default)(KeyboardEventFacade)).call(this)),_this4),event,currentTarget);var key=void 0;if(((key=event.keyCode||event.charCode)in keyMap?keyMap[key]:key)==='number'){_this4.key=key;}ingestEvent(KeyboardEventFacade.map,event,_this4);return _this4;}return KeyboardEventFacade;}(EventFacade);KeyboardEventFacade.map={ctrlKey:'ctrl',altKey:'alt',metaKey:'meta',shiftKey:'shiftKey',altGraphKey:'altGraph'};var TouchEventFacade=exports.TouchEventFacade=function(_EventFacade5){(0,_inherits3.default)(TouchEventFacade,_EventFacade5);// eslint-disable-line
function TouchEventFacade(event,currentTarget){var _this5;(0,_classCallCheck3.default)(this,TouchEventFacade);initialize.call((_this5=(0,_possibleConstructorReturn3.default)(this,(TouchEventFacade.__proto__||(0,_getPrototypeOf2.default)(TouchEventFacade)).call(this)),_this5),event,currentTarget);return _this5;}return TouchEventFacade;}(EventFacade);